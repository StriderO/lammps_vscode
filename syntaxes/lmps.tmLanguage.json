{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(msd/nongauss|property/chunk|smd/rho|com/chunk|mliap|entropy/atom|ke/eff|displace/atom|smd/tlsph/defgrad|ackland/atom|property/atom|erotate/sphere/atom|dihedral|temp/chunk|dilatation/atom|temp/uef|cna/atom|sph/e/atom|ti|chunk/atom|msd/chunk|improper/local|slice|omega/chunk|temp/partial|smd/vol|temp/com|smd/tlsph/stress|smd/tlsph/shape|rdf|cnp/atom|angle|msd|torque/chunk|dpd|body/local|reduce/chunk|sna/atom|snad/atom|snav/atom|snap|pressure/uef|sph/t/atom|com|smd/ulsph/strain|ke/atom|chunk/spread/atom|smd/tlsph/strain/rate|pe|property/local|adf|smd/plastic/strain/rate|reduce|reduce/region|temp/rotate|gyration/chunk|angmom/chunk|dipole/chunk|temp/eff|gyration/shape/chunk|smd/plastic/strain|damage/atom|temp/drude|pressure/cylinder|hma|smd/triangle/vertices|temp/asphere|erotate/rigid|viscosity/cos|temp/profile|tdpd/cc/atom|rigid/local|pressure|dihedral/local|smd/ulsph/stress|smd/ulsph/num/neighs|smd/tlsph/strain|temp/ramp|angle/local|ke/atom/eff|edpd/temp/atom|centro/atom|stress/atom|centroid/stress/atom|global/atom|saed|temp/body|hexorder/atom|bond/local|pair|temp/region|smd/hourglass/error|smd/tlsph/dt|heat/flux|improper|xrd|pe/atom|coord/atom|smd/contact/radius|temp/region/eff|voronoi/atom|temp/deform/eff|momentum|gyration/shape|inertia/chunk|contact/atom|event/displace|smd/ulsph/effm|vacf|smd/internal/energy|fep|ke|ptm/atom|bond|group/group|erotate/asphere|force/tally|heat/flux/tally|pe/tally|pe/mol/tally|stress/tally|smd/ulsph/strain/rate|cluster/atom|fragment/atom|aggregate/atom|compute|temp/cs|temp|mesont|stress/mop|stress/mop/profile|spin|smd/damage|temp/deform|ke/rigid|pair/local|dpd/atom|basal/atom|temp/sphere|gyration|smd/tlsph/num/neighs|orientorder/atom|plasticity/atom|vcm/chunk|sph/rho/atom|erotate/sphere)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(gayberne|lebedeva/z|e3b|comb|comb3|list|kim|lj/sdk|lj/sdk/coul/long|lj/sdk/coul/msm|spin/dmi|meam/c|buck|buck/coul/cut|buck/coul/long|buck/coul/msm|mgpt|lj/cut/coul/cut|lj/cut/coul/debye|lj/cut/coul/dsf|lj/cut/coul/long|lj/cut/coul/msm|lj/cut/coul/wolf|buck6d/coul/gauss/dsf|buck6d/coul/gauss/long|python|vashishta|vashishta/table|coul/tt|gauss|gauss/cut|cosine/squared|resquared|bop|local/density|drip|kolmogorov/crespi/full|lj96/cut|momb|tri/lj|multi/lucy|morse|morse/smooth/linear|table/rx|exp6/rx|srp|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|oxdna/coaxstk|beck|body/rounded/polygon|lj/cut/soft|lj/cut/coul/cut/soft|lj/cut/coul/long/soft|lj/cut/tip4p/long/soft|lj/charmm/coul/long/soft|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/long/soft|tip4p/long/soft|morse/soft|kolmogorov/crespi/z|zero|tersoff/mod|tersoff/mod/c|ilp/graphene/hbn|dpd|dpd/tstat|smd/ulsph|nm/cut|nm/cut/coul/cut|nm/cut/coul/long|mm3/switch3/coulgauss/long|meam/sw/spline|adp|mesont/tpm|lj/cut|yukawa/colloid|edpd|mdpd|mdpd/rhosum|tdpd|body/rounded/polyhedron|agni|sph/heatconduction|lj/smooth|brownian|brownian/poly|eim|gw|gw/zbl|mie/cut|atm|lj/expand|lj/expand/coul/long|body/nparticle|lj/cut/dipole/cut|lj/sf/dipole/sf|lj/cut/dipole/long|lj/long/dipole/long|sph/idealgas|thole|lj/cut/thole/long|peri/pmb|peri/lps|peri/ves|peri/eps|colloid|spin/dipole/cut|spin/dipole/long|reax/c|none|smd/tlsph|tersoff/zbl|lj/class2|lj/class2/coul/cut|lj/class2/coul/long|lj/mdf|buck/mdf|lennard/mdf|born/coul/dsf/cs|born/coul/long/cs|born/coul/wolf/cs|buck/coul/long/cs|coul/long/cs|coul/wolf/cs|lj/cut/coul/long/cs|lj/class2/coul/long/cs|hybrid|hybrid/overlay|lj/charmm/coul/charmm|lj/charmm/coul/charmm/implicit|lj/charmm/coul/long|lj/charmm/coul/msm|lj/charmmfsw/coul/charmmfsh|lj/charmmfsw/coul/long|zbl|spin/neel|spin/magelec|nb3b/harmonic|lj/switch3/coulgauss/long|dsmc|ufm|lj/cut/tip4p/cut|lj/cut/tip4p/long|coul/shield|lj/cubic|smd/hertz|lj/smooth/linear|eam|eam/alloy|eam/cd|eam/cd/old|eam/fs|lj/gromacs|lj/gromacs/coul/gromacs|sph/rhosum|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|oxdna2/dh|soft|eff/cut|coul/diel|smtbq|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|oxrna2/dh|mesocnt|line/lj|smd/tri_surface|granular|sph/lj|gran/hooke|gran/hooke/history|gran/hertz/history|buck/long/coul/long|airebo|airebo/morse|rebo|meam/spline|polymorphic|born|born/coul/long|born/coul/msm|born/coul/wolf|born/coul/dsf|sw|mliap|quip|extep|yukawa|spin/exchange|multi/lucy/rx|table|coul/cut|coul/debye|coul/dsf|coul/long|coul/msm|coul/streitz|coul/wolf|tip4p/cut|tip4p/long|sdpd/taitwater/isothermal|hbond/dreiding/lj|hbond/dreiding/morse|lubricateU|lubricateU/poly|awpmd/cut|edip|edip/multi|sph/taitwater|snap|lubricate|lubricate/poly|lcbop|sph/taitwater/morris|lj/long/coul/long|lj/long/tip4p/long|coul/slater|coul/slater/cut|coul/slater/long|dpd/fdt|dpd/fdt/energy|tersoff|tersoff/table|pair_style)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(class2|mm3|table|special|harmonic|morse|harmonic/shift|hybrid|nonlinear|zero|oxdna/fene|oxdna2/fene|oxrna2/fene|none|bond_style|gromos|fene|fene/expand|quartic|harmonic/shift/cut)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(fourier|quartic|dipole|cosine/squared|cross|class2|class2/p6|cosine/shift/exp|charmm|angle_style|none|cosine/buck6d|sdk|cosine|cosine/shift|table|cosine/delta|hybrid|mm3|harmonic|zero|cosine/periodic|fourier/simple)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(zero|none|hybrid|class2|helix|charmm|charmmfsw|multi/harmonic|table/cut|nharmonic|quadratic|cosine/shift/exp|harmonic|opls|fourier|spherical|dihedral_style|table)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(inversion/harmonic|improper_style|none|ring|harmonic|sqdistharm|cossq|zero|distance|hybrid|fourier|umbrella|class2|cvff|distharm)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(vtk|image|movie|h5md|cfg/uef|atom/adios|custom/adios|molfile|dump|netcdf|netcdf/mpiio)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(planeforce|wall/lj93|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|wall/morse|print|heat|smd|ave/correlate|spring/self|reax/c/bonds|drag|addtorque|mscg|pafi|smd/wall_surface|nve/noforce|press/berendsen|deform|plumed|restrain|lb/fluid|bond/create|bond/create/angle|freeze|meso/move|wall/gran|nph/sphere|nvk|vector|move|nvt/sphere|pimd|nph/body|oneway|langevin/spin|store/force|wall/reflect|thermal/conductivity|wall/body/polygon|precession/spin|bocs|viscosity|nve/asphere|wall/body/polyhedron|rigid|rigid/nve|rigid/nvt|rigid/npt|rigid/nph|rigid/small|rigid/nve/small|rigid/nvt/small|rigid/npt/small|rigid/nph/small|nphug|nve/spin|phonon|balance|nve/limit|nve/tri|nph/asphere|adapt/fep|neb|external|gravity|nve/dotc/langevin|wall/reflect/stochastic|latte|store/state|temp/csvr|temp/csld|edpd/source|tdpd/source|ave/time|neb/spin|smd/integrate_tlsph|npt/asphere|eos/table|spring|qtb|nvt/manifold/rattle|grem|numdiff|nvt/body|temp/rescale|drude|poems|rigid/meso|wall/ees|wall/region/ees|tmd|nve/awpmd|wall/srd|propel/self|aveforce|ave/atom|deposit|bond/swap|rx|ttm|ttm/mod|nvt/eff|npt/eff|nph/eff|temp/rescale/eff|fix|ave/correlate/long|box/relax|viscous|smd/move_tri_surf|rhok|gcmc|spring/chunk|enforce2d|nve/body|wall/region|langevin|msst|bond/react|pour|colvars|eos/table/rx|langevin/drude|reax/c/species|drude/transform/direct|drude/transform/inverse|momentum|momentum/chunk|saed/vtk|npt/sphere|imd|ave/chunk|python/invoke|tune/kspace|hyper/local|langevin/eff|lb/momentum|nvt/uef|npt/uef|shake|rattle|lineforce|gle|temp/berendsen|qmmm|nvt|npt|nph|adapt|shardlow|sph|ffl|electron/stopping|orient/eco|sph/stationary|client/md|tfmc|python/move|dt/reset|nvt/sllod|spring/rg|evaporate|halt|gld|srd|nve/sphere|nve|npt/body|bond/break|nvt/asphere|mvv/dpd|mvv/edpd|mvv/tdpd|flow/gauss|cmap|recenter|ti/spring|property/atom|accelerate/cos|ehex|wall/gran/region|ave/histo|ave/histo/weight|wall/piston|smd/adjust_dt|npt/cauchy|eos/cv|orient/fcc|orient/bcc|lb/viscous|dpd/energy|lb/pc|nve/dot|indent|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|qeq/fire|nvt/sllod/eff|setforce|setforce/spin|widom|atom/swap|smd/setvel|ipi|append/atoms|qbmsst|nve/eff|nve/asphere/noforce|smd/integrate_ulsph|hyper/global|qeq/reax|controller|addforce|efield|filter/corotate|qeq/comb|manifoldforce|atc|lb/rigid/pc/sphere|nve/manifold/rattle|nve/line)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(nodeset_to_elementset|nodeset|volume_integral|quadrature|pair_interactions|bond_interactions|initial|delete_elements|scale|boundary_faceset|fields|remove_species|reset_time|exchange|output|add_molecule|write_restart|mass_matrix|internal_quadrature|temperature_definition|kernel|read|add_to_nodeset|remove_molecule|atom_element_map|on_the_fly|computes|box|reference_potential_energy|contour_integral|consistent_fe_initialization|kernel_bandwidth|rates|write|poisson_solver|equilibrium_start|fix_modify|gradients|mask_direction|atom_weight|electron_integration|atomic_charge|decomposition|reset_atomic_reference_positions|momentum|track_displacement|lumped_lambda_solve|unfix|add_species|read_restart|type|remove_source|write_atom_weights|fix|create|filter|unfix_flux|source_integration|time_integration|thermal|internal_element_set|create_nodeset|sample_frequency|boundary_dynamics|boundary_integral|source|fe_md_boundary|create_elementset|plane|localized_lambda|fix_flux|material)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(python|kim_init|kim_interactions|kim_query|kim_param|kim_property|comm_modify|temper/npt|timer|read_restart|boundary|write_dump|undump|min_modify|write_data|temper|atom_style|units|clear|displace_atoms|delete_bonds|comm_style|rerun|timestep|reset_timestep|tad|mass|thermo_modify|set|bond_coeff|change_box|pair_coeff|log|pair_modify|next|region|unfix|delete_atoms|if|compute_modify|neb|uncompute|dynamical_matrix|kspace_style|dump_modify|processors|package|partition|neb/spin|jump|min_style spin|min_style spin/cg|min_style spin/lbfgs|shell|minimize|minimize/kk|group|create_atoms|balance|create_box|replicate|thermo_style|dihedral_coeff|lattice|angle_coeff|include|write_restart|velocity|read_data|temper/grem|read_dump|thermo|bond_write|special_bonds|improper_coeff|message|restart|molecule|neighbor|kspace_modify|hyper|min_style|echo|server md|newton|box|print|reset_atom_ids|server mc|variable|dimension|create_bonds|neigh_modify|atom_modify|third_order|suffix|quit|info|server|group2ndx|ndx2group|run|prd|reset_mol_ids|run_style|write_coeff|label|dielectric|pair_write)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}