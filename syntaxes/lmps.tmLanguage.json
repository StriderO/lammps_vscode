{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Lammps",
    "patterns": [
        {
            "include": "#comments"
        },
        {
            "include": "#keywords"
        },
        {
            "include": "#strings"
        },
        {
            "include": "#numerics"
        },
        {
            "include": "#variables"
        },
        {
            "include": "#var_brackets"
        },
        {
            "include": "#linecontinuation"
        },
        {
            "include": "#function_brackets"
        },
        {
            "include": "#operators"
        }
    ],
    "repository": {
        "comments": {
            "name": "comment.line.lmps",
            "match": "#.*$"
        },
        "linecontinuation": {
            "match": "\\s*&\\s*$",
            "name": "constant.character.escape.lmps"
        },
        "functions": {
            "patterns": [
                {
                    "name": "support.function.math_functions.lmps",
                    "match": "\\b(sqrt|exp|ln|log|abs|sin|cos|tan|asin|acos|atan|atan2|random|normal|ceil|floor|round|ramp|stagger|logfreq|logfreq2|logfreq3|stride|stride2|vdisplace|swiggle|cwiggle)(?=\\()"
                },
                {
                    "name": "support.function.group_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.region_functions.lmps",
                    "match": "\\b(count|mass|charge|xcm|vcm|fcm|bound|gyration|ke|angmom|torque|inertia|omega)(?=\\()"
                },
                {
                    "name": "support.function.special_functions.lmps",
                    "match": "\\b(sum|min|max|ave|trap|slope|gmask|rmask|grmask|next)(?=\\()"
                },
                {
                    "name": "support.function.feature_functions.lmps",
                    "match": "\\b(is_active|is_defined)(?=\\()"
                }
            ]
        },
        "operators": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.lmps",
                    "match": "\\+|\\-(?![aA-zZ])|\\*|\\/|\\^|\\%|\\=\\=?|\\!\\=?|\\<[\\=\\>]?|\\>\\=?|\\&\\&|\\|[\\|\\^]"
                },
                {
                    "include": "#eq_brackets"
                }
            ]
        },
        "keywords": {
            "patterns": [
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.lmps",
                            "match": "\\b(temp/ramp|smd/vol|pressure|ke/rigid|torque/chunk|temp/eff|com/chunk|temp/cs|event/displace|gyration/shape/chunk|smd/ulsph/effm|bond|erotate/rigid|vacf|viscosity/cos|pressure/uef|mliap|dipole/chunk|temp/chunk|smd/ulsph/num/neighs|pair/local|plasticity/atom|gyration|edpd/temp/atom|erotate/sphere/atom|bond/local|sph/rho/atom|temp/profile|ke/atom/eff|momentum|smd/tlsph/num/neighs|rigid/local|cna/atom|xrd|temp/body|chunk/spread/atom|improper|dihedral/local|ke/atom|msd/chunk|com|temp/rotate|smd/tlsph/dt|stress/mop|cluster/atom|fragment/atom|body/local|temp/region/eff|erotate/sphere|pe|sna/atom|snad/atom|snav/atom|displace/atom|centro/atom|smd/tlsph/strain|damage/atom|temp/deform|pair|voronoi/atom|saed|temp/asphere|temp/partial|slice|temp/sphere|pressure/cylinder|ti|adf|coord/atom|coord/atom/kk|smd/damage|chunk/atom|temp/uef|temp|temp/kk|smd/rho|ke|inertia/chunk|temp/deform/eff|group/group|smd/tlsph/strain/rate|ackland/atom|ke/eff|cnp/atom|smd/plastic/strain|dihedral|msd|smd/tlsph/stress|ptm/atom|temp/com|smd/internal/energy|smd/ulsph/stress|property/chunk|basal/atom|rdf|fep|smd/ulsph/strain|spin|vcm/chunk|msd/nongauss|orientorder/atom|orientorder/atom/kk|global/atom|pe/atom|smd/triangle/vertices|tdpd/cc/atom|angle|smd/contact/radius|smd/tlsph/defgrad|dilatation/atom|sph/t/atom|contact/atom|gyration/chunk|angle/local|reduce/chunk|omega/chunk|erotate/asphere|temp/drude|property/atom|smd/ulsph/strain/rate|hexorder/atom|smd/tlsph/shape|smd/plastic/strain/rate|reduce|stress/atom|angmom/chunk|improper/local|dpd/atom|smd/hourglass/error|dpd|entropy/atom|gyration/shape|sph/e/atom|hma|mesont|temp/region|compute|force/tally|heat/flux/tally|pe/tally|pe/mol/tally|heat/flux|property/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.lmps",
                            "match": "\\b(multi/lucy/rx|multi/lucy/rx/kk|polymorphic|none|lj/switch3/coulgauss/long|coul/diel|coul/diel/omp|peri/pmb|peri/pmb/omp|peri/lps|peri/lps/omp|peri/ves|mesocnt|spin/dipole/cut|resquared|resquared/gpu|resquared/omp|list|soft|soft/gpu|soft/omp|gran/hooke|gran/hooke/omp|gran/hooke/history|gran/hooke/history/omp|gran/hooke/history/kk|gran/hertz/history|gran/hertz/history/omp|spin/neel|lj/cut/dipole/cut|lj/cut/dipole/cut/gpu|lj/cut/dipole/cut/omp|lj/sf/dipole/sf|lj/sf/dipole/sf/gpu|lj/sf/dipole/sf/omp|lj/cut/dipole/long|lj/cut/dipole/long/gpu|lj/long/dipole/long|exp6/rx|exp6/rx/kk|cosine/squared|lubricate|lubricate/omp|lubricate/poly|lubricate/poly/omp|lj/charmm/coul/charmm|lj/charmm/coul/charmm/intel|lj/charmm/coul/charmm/kk|lj/charmm/coul/charmm/omp|lj/charmm/coul/charmm/implicit|lj/charmm/coul/charmm/implicit/kk|lj/charmm/coul/charmm/implicit/omp|lj/charmm/coul/long|lj/charmm/coul/long/gpu|lj/charmm/coul/long/intel|lj/charmm/coul/long/kk|lj/charmm/coul/long/opt|lj/charmm/coul/long/omp|lj/charmm/coul/msm|lj/charmm/coul/msm/omp|lj/charmmfsw/coul/charmmfsh|lj/mdf|buck/mdf|morse|morse/gpu|morse/omp|morse/opt|morse/kk|morse/smooth/linear|morse/smooth/linear/omp|oxrna2/excv|oxrna2/stk|oxrna2/hbond|oxrna2/xstk|oxrna2/coaxstk|lj/gromacs|lj/gromacs/gpu|lj/gromacs/kk|lj/gromacs/omp|lj/gromacs/coul/gromacs|lj/gromacs/coul/gromacs/kk|lj/gromacs/coul/gromacs/omp|gauss|gauss/gpu|gauss/omp|gauss/cut|gauss/cut/omp|body/rounded/polyhedron|kolmogorov/crespi/z|smd/tlsph|lj/expand|lj/expand/gpu|lj/expand/kk|lj/expand/omp|lj/expand/coul/long|lj/expand/coul/long/gpu|smd/ulsph|oxdna2/excv|oxdna2/stk|oxdna2/hbond|oxdna2/xstk|oxdna2/coaxstk|granular|tersoff/mod|tersoff/mod/gpu|tersoff/mod/kk|tersoff/mod/omp|tersoff/mod/c|tersoff/mod/c/omp|awpmd/cut|edip|edip/omp|edip/multi|body/nparticle|line/lj|smd/tri_surface|smtbq|lj/cut|lj/cut/gpu|lj/cut/intel|lj/cut/kk|lj/cut/opt|lj/cut/omp|beck|beck/gpu|beck/omp|lj/long/coul/long|lj/long/coul/long/intel|lj/long/coul/long/omp|lj/long/coul/long/opt|lj/long/tip4p/long|lj/long/tip4p/long/omp|mm3/switch3/coulgauss/long|brownian|brownian/omp|brownian/poly|brownian/poly/omp|airebo|airebo/intel|airebo/omp|airebo/morse|airebo/morse/intel|airebo/morse/omp|rebo|rebo/intel|rebo/omp|spin/dmi|drip|coul/shield|extep|buck6d/coul/gauss/dsf|hybrid|hybrid/kk|hybrid/overlay|hybrid/overlay/kk|agni|agni/omp|eim|eim/omp|atm|vashishta|vashishta/gpu|vashishta/omp|vashishta/kk|vashishta/table|vashishta/table/omp|lj/cubic|lj/cubic/gpu|lj/cubic/omp|meam/spline|meam/spline/omp|born/coul/dsf/cs|born/coul/long/cs|born/coul/long/cs/gpu|born/coul/wolf/cs|born/coul/wolf/cs/gpu|buck/coul/long/cs|coul/long/cs|coul/long/cs/gpu|coul/wolf/cs|lj/cut/coul/long/cs|tri/lj|snap|snap/kk|table/rx|table/rx/kk|gw|comb|comb/omp|comb3|lubricateU|ilp/graphene/hbn|body/rounded/polygon|sph/heatconduction|quip|edpd|mdpd|mdpd/rhosum|buck/long/coul/long|buck/long/coul/long/omp|born|born/omp|born/gpu|born/coul/long|born/coul/long/gpu|born/coul/long/omp|born/coul/msm|born/coul/msm/omp|born/coul/wolf|born/coul/wolf/gpu|born/coul/wolf/omp|born/coul/dsf|lj/smooth/linear|lj/smooth/linear/omp|e3b|dpd|dpd/gpu|dpd/intel|dpd/omp|dpd/tstat|dpd/tstat/gpu|dpd/tstat/omp|colloid|colloid/gpu|colloid/omp|lj/cut/soft|lj/cut/soft/omp|lj/cut/coul/cut/soft|lj/cut/coul/cut/soft/omp|lj/cut/coul/long/soft|lj/cut/coul/long/soft/omp|lj/cut/tip4p/long/soft|lj/cut/tip4p/long/soft/omp|lj/charmm/coul/long/soft|lj/charmm/coul/long/soft/omp|lj/class2/soft|lj/class2/coul/cut/soft|lj/class2/coul/long/soft|coul/cut/soft|coul/cut/soft/omp|coul/long/soft|coul/long/soft/omp|tip4p/long/soft|tip4p/long/soft/omp|morse/soft|lcbop|zbl|zbl/gpu|zbl/kk|zbl/omp|dsmc|nm/cut|nm/cut/omp|nm/cut/coul/cut|nm/cut/coul/cut/omp|nm/cut/coul/long|nm/cut/coul/long/omp|sph/taitwater/morris|buck|buck/gpu|buck/intel|buck/kk|buck/omp|buck/coul/cut|buck/coul/cut/gpu|buck/coul/cut/intel|buck/coul/cut/kk|buck/coul/cut/omp|buck/coul/long|buck/coul/long/gpu|buck/coul/long/intel|buck/coul/long/kk|buck/coul/long/omp|buck/coul/msm|buck/coul/msm/omp|sph/taitwater|thole|lj/cut/thole/long|lj/cut/thole/long/omp|pair_style|reax/c|reax/c/kk|reax/c/omp|sph/rhosum|sw|sw/gpu|sw/intel|sw/kk|sw/omp|lj96/cut|lj96/cut/gpu|lj96/cut/omp|sph/idealgas|yukawa|yukawa/gpu|yukawa/omp|yukawa/kk|oxdna/excv|oxdna/stk|oxdna/hbond|oxdna/xstk|bop|eam|eam/gpu|eam/intel|eam/kk|eam/omp|eam/opt|eam/alloy|eam/alloy/gpu|eam/alloy/intel|eam/alloy/kk|eam/alloy/omp|eam/alloy/opt|eam/cd|eam/cd/old|eam/fs|eam/fs/gpu|eam/fs/intel|eam/fs/kk|eam/fs/omp|eam/fs/opt|ufm|ufm/gpu|ufm/omp|ufm/opt|gayberne|gayberne/gpu|gayberne/intel|gayberne/omp|sph/lj|table|table/gpu|table/kk|table/omp|srp|yukawa/colloid|yukawa/colloid/gpu|yukawa/colloid/omp|tersoff/zbl|tersoff/zbl/gpu|tersoff/zbl/kk|tersoff/zbl/omp|meam/c|spin/magelec|lj/class2|lj/class2/gpu|lj/class2/kk|lj/class2/omp|lj/class2/coul/cut|lj/class2/coul/cut/kk|lj/class2/coul/cut/omp|lj/class2/coul/long|lj/class2/coul/long/gpu|lj/class2/coul/long/kk|lj/class2/coul/long/omp|kolmogorov/crespi/full|lebedeva/z|coul/tt|eff/cut|lj/sdk|lj/sdk/gpu|lj/sdk/kk|lj/sdk/omp|lj/sdk/coul/long|lj/sdk/coul/long/gpu|lj/sdk/coul/long/omp|lj/sdk/coul/msm|lj/sdk/coul/msm/omp|mliap|kim|coul/slater|coul/slater/cut|tersoff|tersoff/gpu|tersoff/intel|tersoff/kk|tersoff/omp|tersoff/table|tersoff/table/omp|lj/smooth|lj/smooth/omp|coul/cut|coul/cut/gpu|coul/cut/kk|coul/cut/omp|coul/debye|coul/debye/gpu|coul/debye/kk|coul/debye/omp|coul/dsf|coul/dsf/gpu|coul/dsf/kk|coul/dsf/omp|coul/long|coul/long/omp|coul/long/kk|coul/long/gpu|coul/msm|coul/msm/omp|coul/streitz|coul/wolf|coul/wolf/kk|coul/wolf/omp|tip4p/cut|tip4p/cut/omp|tip4p/long|tip4p/long/omp|lj/cut/tip4p/cut|lj/cut/tip4p/cut/omp|lj/cut/tip4p/long|lj/cut/tip4p/long/gpu|lj/cut/tip4p/long/omp|lj/cut/tip4p/long/opt|python|adp|adp/omp|zero|meam/sw/spline|smd/hertz|momb|dpd/fdt|dpd/fdt/energy|dpd/fdt/energy/kk|multi/lucy|mie/cut|mie/cut/gpu|sdpd/taitwater/isothermal|hbond/dreiding/lj|hbond/dreiding/lj/omp|hbond/dreiding/morse|hbond/dreiding/morse/omp|mgpt|nb3b/harmonic|local/density|lj/cut/coul/cut|lj/cut/coul/cut/gpu|lj/cut/coul/cut/kk|lj/cut/coul/cut/omp|lj/cut/coul/debye|lj/cut/coul/debye/gpu|lj/cut/coul/debye/kk|lj/cut/coul/debye/omp|lj/cut/coul/dsf|lj/cut/coul/dsf/gpu|lj/cut/coul/dsf/kk|lj/cut/coul/dsf/omp|lj/cut/coul/long|lj/cut/coul/long/gpu|lj/cut/coul/long/kk|lj/cut/coul/long/intel|lj/cut/coul/long/opt|lj/cut/coul/long/omp|lj/cut/coul/msm|lj/cut/coul/msm/gpu|lj/cut/coul/msm/omp|lj/cut/coul/wolf|lj/cut/coul/wolf/omp|mesont/tpm|spin/exchange)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.lmps",
                            "match": "\\b(hybrid|zero|harmonic/shift|harmonic/shift/omp|fene/expand|fene/expand/omp|fene|fene/intel|fene/kk|fene/omp|nonlinear|nonlinear/omp|table|table/omp|oxdna/fene|oxdna2/fene|bond_style|none|quartic|quartic/omp|harmonic/shift/cut|harmonic/shift/cut/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|class2|class2/omp|class2/kk|mm3|special|morse|morse/omp|gromos|gromos/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*angle_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.angle_style.lmps",
                            "match": "\\b(charmm|charmm/intel|charmm/kk|charmm/omp|angle_style|mm3|hybrid|cosine/buck6d|class2|class2/kk|class2/omp|class2/p6|table|table/omp|cosine|cosine/omp|cosine/kk|quartic|quartic/omp|cosine/delta|cosine/delta/omp|cosine/shift|cosine/shift/omp|none|sdk|sdk/omp|cosine/shift/exp|cosine/shift/exp/omp|cosine/periodic|cosine/periodic/omp|cosine/squared|cosine/squared/omp|fourier/simple|fourier/simple/omp|fourier|fourier/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|cross|zero|dipole|dipole/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dihedral_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dihedral_style.lmps",
                            "match": "\\b(class2|class2/omp|class2/kk|fourier|fourier/intel|fourier/omp|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|table/cut|cosine/shift/exp|cosine/shift/exp/omp|helix|helix/omp|none|dihedral_style|quadratic|quadratic/omp|nharmonic|nharmonic/omp|spherical|zero|charmm|charmm/intel|charmm/kk|charmm/omp|charmmfsw|hybrid|opls|opls/intel|opls/kk|opls/omp|multi/harmonic|multi/harmonic/omp|table|table/omp)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*improper_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.improper_style.lmps",
                            "match": "\\b(fourier|fourier/omp|distance|cvff|cvff/intel|cvff/omp|none|hybrid|ring|ring/omp|class2|class2/omp|class2/kk|distharm|sqdistharm|harmonic|harmonic/intel|harmonic/kk|harmonic/omp|zero|cossq|cossq/omp|umbrella|umbrella/omp|improper_style|inversion/harmonic)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.dump.lmps",
                            "match": "\\b(atom/adios|molfile|image|vtk|dump|cfg/uef|netcdf|h5md)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.lmps",
                            "match": "\\b(tfmc|langevin/spin|tune/kspace|python/invoke|wall/piston|print|numdiff|nve/line|balance|addforce|temp/berendsen|press/berendsen|planeforce|ti/spring|temp/rescale|wall/ees|ave/atom|ave/histo|wall/srd|pafi|nve/tri|latte|nve/dotc/langevin|ave/correlate|nvt/asphere|nvt/asphere/omp|langevin|langevin/kk|phonon|colvars|adapt|vector|smd/wall_surface|nve/spin|eos/table/rx|eos/table/rx/kk|shake|nvk|store/state|manifoldforce|box/relax|spring/rg|srd|rigid/meso|nvt/sphere|nvt/sphere/omp|drag|deform|deform/kk|nve|nve/intel|nve/kk|nve/omp|move|bond/break|wall/region|mvv/dpd|mvv/edpd|nve/manifold/rattle|heat|gle|setforce|setforce/kk|setforce/spin|langevin/eff|accelerate/cos|electron/stopping|reax/c/bonds|reax/c/bonds/kk|npt/sphere|npt/sphere/omp|nphug|nphug/omp|ttm|viscosity|recenter|rhok|widom|temp/rescale/eff|wall/gran/region|smd/move_tri_surf|neb/spin|nvt/manifold/rattle|qeq/comb|qeq/comb/omp|neb|sph|wall/reflect/stochastic|aveforce|npt/cauchy|wall/gran|qtb|bond/create|lineforce|wall/body/polygon|nve/noforce|nph/body|bond/react|wall/lj93|wall/lj93/kk|wall/lj126|wall/lj1043|wall/colloid|wall/harmonic|freeze|freeze/kk|ave/time|nph/sphere|nph/sphere/omp|adapt/fep|smd/setvel|store/force|python/move|addtorque|nve/dot|qbmsst|client/md|propel/self|lb/pc|reax/c/species|reax/c/species/kk|drude/transform/direct|msst|nvt|nvt/intel|nvt/kk|nvt/omp|npt|npt/intel|npt/kk|npt/omp|nph|nph/kk|nph/omp|saed/vtk|lb/viscous|lb/fluid|temp/csvr|qeq/point|qeq/shielded|qeq/slater|qeq/dynamic|filter/corotate|imd|nvt/uef|atom/swap|spring/self|bond/swap|external|dpd/energy|dpd/energy/kk|rigid|rigid/omp|rigid/nve|rigid/nve/omp|rigid/nvt|rigid/nvt/omp|rigid/npt|rigid/npt/omp|rigid/nph|rigid/nph/omp|rigid/small|rigid/small/omp|rigid/nve/small|rigid/nvt/small|rigid/npt/small|sph/stationary|nve/sphere|nve/sphere/omp|nve/sphere/kk|momentum|momentum/kk|momentum/chunk|plumed|qmmm|evaporate|drude|ave/chunk|hyper/global|property/atom|property/atom/kk|wall/reflect|wall/reflect/kk|halt|pour|npt/asphere|npt/asphere/omp|nvt/sllod|nvt/sllod/intel|nvt/sllod/omp|nvt/sllod/eff|restrain|controller|lb/rigid/pc/sphere|shardlow|shardlow/kk|nve/awpmd|tmd|nph/asphere|nph/asphere/omp|spring/chunk|nvt/body|ipi|ave/correlate/long|smd/adjust_dt|append/atoms|ehex|npt/body|orient/fcc|hyper/local|nvt/eff|npt/eff|cmap|nve/body|flow/gauss|mscg|wall/body/polyhedron|deposit|poems|eos/cv|grem|enforce2d|enforce2d/kk|bocs|edpd/source|rx|rx/kk|meso/move|dt/reset|pimd|gravity|gravity/omp|gravity/kk|gcmc|eos/table|smd/integrate_tlsph|oneway|viscous|nve/eff|smd|smd/integrate_ulsph|nve/asphere/noforce|gld|ffl|efield|nve/asphere|nve/asphere/intel|lb/momentum|atc|thermal/conductivity|indent|langevin/drude|qeq/reax|qeq/reax/kk|qeq/reax/omp|spring|fix|precession/spin|nve/limit)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix_modify\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix_modify.lmps",
                            "match": "\\b(fix_modify|temperature_definition|fields|lumped_lambda_solve|read|atomic_charge|remove_source|reset_time|consistent_fe_initialization|boundary_integral|unfix_flux|time_integration|volume_integral|create_elementset|read_restart|material|scale|initial|quadrature|internal_quadrature|contour_integral|internal_element_set|add_species|fe_md_boundary|pair_interactions|filter|unfix|source_integration|exchange|momentum|gradients|add_to_nodeset|fix|track_displacement|atom_weight|on_the_fly|boundary_faceset|plane|kernel|reset_atomic_reference_positions|nodeset|remove_molecule|box|mask_direction|type|source|mass_matrix|fix_flux|create|equilibrium_start|atom_element_map|electron_integration|decomposition|write_atom_weights|write_restart|boundary_dynamics|nodeset_to_elementset|create_nodeset|localized_lambda|add_molecule|kernel_bandwidth|rates|write|computes|output|thermal|sample_frequency|reference_potential_energy|delete_elements|remove_species|poisson_solver)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "name": "keyword.command.general.lmps",
                    "match": "^\\s*\\b(server mc|newton|dump_modify|neb|include|min_style spin|min_style spin/cg|neigh_modify|displace_atoms|dihedral_coeff|comm_style|if|neighbor|thermo_modify|tad|uncompute|delete_bonds|temper/npt|python|thermo_style|reset_mol_ids|minimize|molecule|units|timer|box|variable|clear|delete_atoms|create_bonds|message|kspace_style|min_style|bond_coeff|temper|change_box|balance|echo|compute_modify|server md|read_dump|write_restart|label|undump|:doc:dump vtk|:doc:dump h5md|:doc:dump molfile|:doc:dump netcdf|:doc:dump image|:doc:dump movie|:doc:dump atom/adios|info|comm_modify|suffix|thermo|:ref:kim_init<kim_init command>|:ref:kim_interactions<kim_interactions command>|:ref:kim_query<kim_query command>|:ref:kim_param<kim_param command>|package|velocity|restart|atom_modify|kspace_modify|partition|neb/spin|pair_modify|dielectric|temper/grem|hyper|group2ndx|special_bonds|improper_coeff|rerun|reset_timestep|group|run|shell|pair_coeff|set|prd|third_order|next|write_coeff|unfix|boundary|angle_coeff|timestep|run_style|print|dimension|quit|mass|write_dump|server|create_atoms|replicate|dynamical_matrix|jump|log|bond_write|pair_write|reset_atom_ids|region|processors|read_restart|atom_style|write_data|lattice|min_modify|read_data|create_box)(?=[\\t\\s])"
                },
                {
                    "name": "keyword.k_space_solver.lmps",
                    "match": "\\b(ewald|ewald/disp|msm|msm/cg|pppm|pppm/cg|pppm/disp|pppm/disp/tip4p|pppm/stagger|pppm/tip4p|scafacos)(?=[\\t\\s])"
                },
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\b(version)\\b"
                },
                {
                    "name": "variable.conditional.lmps",
                    "match": "\\b(on|off|true|false|yes|no)\\b"
                },
                {
                    "name": "support.function.lmps",
                    "match": "\\b(if|then|elif|else|while|for|return|equal)\\b"
                },
                {
                    "name": "keyword.command.general.liggghts.lmps",
                    "match": "^\\s*(atom_modify|atom_style|bond_coeff|bond_style|boundary|box|change_box|clear|communicate|compute|compute_modify|create_atoms|create_box|delete_atoms|delete_bonds|dielectric|dimension|displace_atoms|dump|dump_modify|echo|fix|fix_modify|group|include|info|jump|label|lattice|log|mass|neigh_modify|neigh_settings|neighbor|neighbor_skin|newton|next|orient|origin|pair_coeff|pair_style|partition|print|processors|quit|read_data|read_dump|read_restart|region|replicate|reset_timestep|restart|run|run_style|set|shell|thermo|thermo_modify|thermo_style|timestep|uncompute|undump|unfix|units|variable|velocity|write_data|write_dump|write_restart)(?=[\\t\\s])"
                },
                {
                    "begin": "^\\s*dump\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.dump_styles.liggghts.lmps",
                            "match": "\\b(custom/vtk|image|local/gran/vtk|movie)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*compute\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.compute.liggghts.lmps",
                            "match": "\\b(atom/molecule|bond/local|centro/atom|cluster/atom|cna/atom|com|com/molecule|contact/atom|contact/atom/gran|coord/atom|coord/gran|displace/atom|erotate|erotate/asphere|erotate/multisphere|erotate/sphere|erotate/sphere/atom|erotate/superquadric|group/group|gyration|gyration/molecule|inertia/molecule|ke|ke/atom|ke/multisphere|msd|msd/molecule|msd/nongauss|multisphere|multisphere/single|nparticles/tracer/region|pair/gran/local|pe|pe/atom|pressure|property/atom|property/local|property/molecule|rdf|reduce|reduce/region|rigid|slice|stress/atom|voronoi/atom|wall/gran/local)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*pair_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.pair_style.liggghts.lmps",
                            "match": "\\b(bubble|gran|hybrid|hybrid/overlay|none|soft|sph/artVisc/tensCorr)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*bond_style\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.style.bond_style.liggghts.lmps",
                            "match": "\\b(harmonic|hybrid|none)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                },
                {
                    "begin": "^\\s*fix\\s",
                    "end": "$",
                    "beginCaptures": {
                        "0": {
                            "name": "keyword.command.general.liggghts.lmps"
                        }
                    },
                    "patterns": [
                        {
                            "name": "keyword.command.fix.liggghts.lmps",
                            "match": "\\b(adapt|addforce|ave/atom|ave/correlate|ave/euler|ave/histo|ave/spatial|ave/time|aveforce|bond/break|bond/create|box/relax|buoyancy|check/timestep/gran|continuum/weighted|couple/cfd|deform|drag|dt/reset|efield|enforce2d|external|freeze|gravity|heat/gran|heat/gran/conduction|insert/pack|insert/rate/region|insert/stream|lineforce|massflow/mesh|massflow/mesh/sieve|mesh/surface|mesh/surface/planar|momentum|move|move/mesh|multicontact/halfspace|multisphere|multisphere/break|nve|nve/asphere|nve/asphere/noforce|nve/limit|nve/line|nve/noforce|nve/sphere|nve/superquadric|particledistribution/discrete|particledistribution/discrete/massbased|particledistribution/discrete/numberbased|particletemplate/multisphere|particletemplate/sphere|particletemplate/superquadric|planeforce|poems|print|property/atom|property/atom/regiontracer/time|property/atom/tracer|property/atom/tracer/stream|property/global|rigid|rigid/nph|rigid/npt|rigid/nve|rigid/nvt|rigid/small|setforce|sph/density/continuity|sph/density/corr|sph/density/summation|sph/pressure|spring|spring/rg|spring/self|store/force|store/state|viscous|wall/gran|wall/reflect|wall/region|wall/region/sph)(?=[\\t\\s])"
                        },
                        {
                            "include": "$self"
                        }
                    ]
                }
            ]
        },
        "strings_single_quotes": {
            "name": "string.quoted.single.lmps",
            "begin": "'",
            "end": "'",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                }
            ]
        },
        "strings_double_quotes": {
            "name": "string.quoted.double.lmps",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.lmps",
                    "match": "\\\\."
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#function_brackets"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#var_brackets"
                }
            ]
        },
        "strings": {
            "patterns": [
                {
                    "include": "#strings_single_quotes"
                },
                {
                    "include": "#strings_double_quotes"
                }
            ]
        },
        "numerics": {
            "patterns": [
                {
                    "name": "constant.numeric.lmps",
                    "match": "(?<![aA-zZ0-9])(-?[0-9]*(\\.[0-9]*)?([eE][-]?)?[0-9]+)\\b"
                },
                {
                    "name": "constant.numeric.other.lmps",
                    "match": "\\b(NULL|EDGE|PI|INF)\\b"
                }
            ]
        },
        "variables": {
            "patterns": [
                {
                    "name": "variable.parameter.lmps",
                    "match": "\\$\\w|\\${\\w+}|(\\b(v|f|c)_\\w+\\b)"
                }
            ]
        },
        "eq_brackets": {
            "begin": "\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "support.function.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#variables"
                },
                {
                    "include": "#function_brackets"
                }
            ]
        },
        "var_brackets": {
            "begin": "\\$\\(",
            "end": "\\)",
            "beginCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "endCaptures": {
                "0": {
                    "name": "variable.parameter.lmps"
                }
            },
            "patterns": [
                {
                    "include": "#numerics"
                },
                {
                    "include": "#operators"
                },
                {
                    "include": "#linecontinuation"
                },
                {
                    "include": "#functions"
                }
            ]
        },
        "function_brackets": {
            "patterns": [
                {
                    "include": "#eq_brackets"
                },
                {
                    "include": "#functions"
                },
                {
                    "match": "#functions #eq_brackets"
                }
            ]
        }
    },
    "scopeName": "source.lmps"
}